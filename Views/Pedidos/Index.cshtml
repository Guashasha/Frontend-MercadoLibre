@using frontendnet.Models
@model List<Pedido>
@{
    ViewData["Title"] = "Mis pedidos";

    var pedidosAgrupados = Model.GroupBy(p => p.Fecha.Date)
        .OrderByDescending(g => g.Key);
}

<h2 class="text-center mb-3">@ViewData["Title"]</h2>

@foreach (var grupo in pedidosAgrupados)
{
    <h3>@grupo.Key.ToString("dd/MM/yyyy HH:mm")</h3>

    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Portada</th>
                <th>Producto</th>
                <th>Cantidad</th>
                <th>Precio Unitario</th>
                <th>Subtotal</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pedido in grupo)
            {
                <tr>
                    <td width="200px">
                        <img src='@((pedido.Producto.ArchivoId == null) ? "https://placehold.co/300x200/FFF/999?text=Articulo" : $"{ViewBag.Url}/api/archivos/{pedido.Producto.ArchivoId}")'
                             alt="@pedido.Producto.Titulo" class="img-fluid" data-url="@ViewBag.Url"
                             style="max-height: 200px; width: fit-content" />
                    </td>
                    <td>@pedido.Producto?.Titulo</td>
                    <td>@pedido.Cantidad</td>
                    <td>@pedido.Precio</td>
                    <td>@pedido.Subtotal</td>
                </tr>
            }
        </tbody>
    </table>
}

@section Scripts {
    <script>
        // Mostrar un mensaje si existe en TempData
        const successMessage = '@TempData["SuccessMessage"]';
        if (successMessage) {
            Toastify({
                text: successMessage,
                duration: 3000, // Duración en milisegundos
                gravity: "bottom", // Posición: 'top' o 'bottom'
                position: "center", // 'left', 'center' o 'right'
                backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
            }).showToast();
        }
    </script>
}